#!/bin/bash

BD=$(dirname $0)
. "$BD/lg-config.sh"
STATUSFILE=$TMPDIR/status
REDIR_FILE=$TMPDIR/redirections
touch $REDIR_FILE

function get-status {
    if [[ -f $STATUSFILE ]] ; then
        cat $STATUSFILE
    else
        echo disabled
    fi
}

case `get-status` in
    active)
        . "$TMPDIR/gatewayinfo.sh"
        BRMAC=$(cat /sys/class/net/$BRIF/address)
        INTERFACE=$BRIF
        ;;
    wifi)
        INTERFACE=$WIFIIF
        ;;
    *)
        echo "Status must be 'active' or 'wifi'!"
        exit 1
        ;;
esac

function usage {
    cat << EOF
lg-redirect [add udp|tcp <target ip> <targetport> <redirect ip> [<redirect port>]|del <number>|list]

    The arguments are inserted in iptables rules for the PREROUTING
    chain and the DNAT target. The usual syntax rules apply for address
    ranges, list of addresses or port ranges. See iptables(8) and
    iptables-extensions(8) for more information.
EOF
}

case $1 in
    'add')
		if [[ $# -lt 5 ]] ; then usage ; exit 1 ; fi
        PROT=$2
		TIP=$3
		TPORT=$4
		RIP=$5
		RPORT=$6
		if [[ -z $RPORT ]] ; then RPORT=$TPORT ; fi

		iptables_args="PREROUTING -i $INTERFACE \
            -p $PROT --dport $TPORT --destination $TIP \
            -j DNAT --to-destination $RIP:$RPORT"

        iptables -t nat -A $iptables_args && \
			echo "$TIP;$TPORT;$RIP;$RPORT;$iptables_args" >> $REDIR_FILE
        ;;
	'list')
		counter=0
		while IFS=";" read tip tport rip rport iptab ; do
			echo "$counter) $tip:$tport -> $rip:$rport"
			((counter++))
		done < $REDIR_FILE
		;;
    'del')
		number=$2
		if [[ -z $number ]] ; then  usage ; exit 1 ; fi
		counter=0
        rm "$REDIR_FILE.new"
		while IFS=";" read tip tport rip rport iptab ; do
			if [[ $counter = $number ]] ; then
				iptables -t nat -D $iptab
			else
				echo "$tip;$tport;$rip;$rport;$iptab" >> $REDIR_FILE.new
			fi
			((counter++))
		done < $REDIR_FILE
		if [[ -z `diff $REDIR_FILE $REDIR_FILE.new` ]] ; then
			echo "Number not found: $number"
			exit 1
		else
			mv $REDIR_FILE.new $REDIR_FILE
        fi
        rm "$REDIR_FILE.new"
        ;;
    *)
		usage
        exit 1
        ;;
esac

exit 0
